akka {
  loglevel = DEBUG
  log-config-on-start = off

  actor {
    provider = "cluster"

    serialization-bindings {
      "woe.twin.CborSerializable" = jackson-cbor
    }
  }

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 25520
    }
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 25520
    }
  }

  cluster {
    seed-nodes = [ "akka://RegionTest@127.0.0.1:25520" ]
  }

  cluster {
    sharding {
      number-of-shards = 128
      passivate-idle-entity-after = 15s
    }
  }

  persistence {
    max-concurrent-recoveries = 250000
    journal.plugin = "akka.persistence.journal.inmem"
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshot-1234567890" // this value should be replaced at runtime
    }
    journal-plugin-fallback {
      recovery-event-timeout = 120s
    }
  }

  projection.cassandra {
    offset-store {
      keyspace = "woe_twin"
    }
  }

  projection {
    jdbc {
      dialect = "postgres-dialect"

      blocking-jdbc-dispatcher {
        type = Dispatcher
        executor = "thread-pool-executor"
        thread-pool-executor {
          # Use same number of threads as connections in the JDBC connection pool.
          fixed-pool-size = 50  # see woe.twin.sql.max-pool-size
          # TODO waiting for bug fix - fixed-pool-size = ${?device_projection_jdbc_pool_size}
        }
        throughput = 1
      }

      offset-store {
        schema = ""
        table = "akka_projection_offset_store"
      }
    }
  }
}

woe {
  simulator.http.server {
    host = "localhost"
    host = ${?woe_simulator_http_server_host}
    port = 8081
    port = ${?woe_simulator_http_server_port}
  }
  twin {
    tag-count = 1
    projection-shards = 2
    http.server {
      host = "localhost"
      host = ${?woe_twin_http_server_host}
      port = 8082
      port = ${?woe_twin_http_server_port}
    }
    sql {
      url = "jdbc:postgresql://127.0.0.1:5433/"
      url = ${?postgresql_url}
      username = "yugabyte"
      username = ${?postgresql_username}
      password = "yugabyte"
      password = ${?postgresql_password}
      max-pool-size = 10
    }
  }
}

